# End to End Data Science project



## workflows ML Pipeline 

1. Data ingetion 
2. Data validation
3. Data Transformation 
4. Model trainer 
5. Model evaluation  



## Workflows 

1. update config.yaml 
2. update schema.yaml 
3. update params.yaml 
4. update entity 
5. update the configration manager in src config 
6. update the component 
7. update the pipeline 
8. update the main.py 




Data ingetion :
    1. update config.yaml o
      - data ingestion pipeline require input so we crete those input here :
      - also update constant file -> __init__.py 

    2. update schema.yaml 
    3. update params.yaml 
    4. update entity 
      - config_entity.py 
    5. update the config  manager in src configaration.py

    6. update the component 
    - create the file : components-> data_ingestion.py 
    7. update the pipeline 
     - pipeline-> data_ingestion_pipeline.py 
     - update the pipeline code 
     

    8. update the main.py 
      - finally run this the all pipeline from main.py  







2. Data validation : 
   whenever we get new data for prediction  : those features should no tbe change and their dtypes also should not have to change here we will vlidate decah and every features 


  1. update config.yaml 
      upadate config.yaml
  2. update schema.yaml :
      upadte schemas.yaml (update every features ans their data types )
  3. update params.yaml 
  4. update entity 
     update config_entity.py 
  5. update the configration manager in src config 
     inside config-> configration.py 
  6. update the component 
     inside component fold -> make data_validation.py 
  7. update the pipeline 
    inside pipline fold-> make data_validation_pipeline.py 
  8. update the main.py 








3. Data Transformation :
    inside the Transformation we do feature enginering , data preprocessing 
    we can perform feature enginnering here , but we have clean data 
    we do train-test-split only 

    1. update config.yaml :
     we update data transformation input parameter here  
    2. update schema.yaml 
    3. update params.yaml 
    4. update entity 
        inside the config_entity we define code 
    5. update the configration manager in src config 
        then we update config -> configration.py   
    6. update the component 
        update the components folder -> create data_transformation.py 
    7. update the pipeline      
        inside pipeline -> we make data_transformation_pipeline.py 
        update pipeline code 
    8. update the main.py 
        add all changes inside it 




4. Model trainer : 

  1. update config.yaml 
      upadte the config file 
  2. update schema.yaml 
  3. update params.yaml 
      we update parameter for our algo 
  4. update entity 
      update all yaml file var  here we also upadate algorithm parameter -> config_entity.py 
  5. update the configration manager in src config 
      config-> configration.py 
  6. update the component 
      inside component create file model_tranier.py 
  7. update the pipeline 
      create the pipeline -> model_trainer_pipeline.py 
  8. update the main.py 






5. Model evaluation  

    1. update config.yaml   
        update model all taml variable 
        
    2. update schema.yaml 
    3. update params.yaml 
    4. update entity 
        update path entity-> config_entity.py 
    5. update the configration manager in src config 
        config-> update configration.py 
    6. update the component 
        component -> model_evaluation.py 
    7. update the pipeline 
        update model_evaluation_pipeline.py 
    8. update the main.py 